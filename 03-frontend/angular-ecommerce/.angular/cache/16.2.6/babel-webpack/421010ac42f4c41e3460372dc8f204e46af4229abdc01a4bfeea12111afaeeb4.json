{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let ProductListComponent = class ProductListComponent {\n  constructor(productService, route) {\n    this.productService = productService;\n    this.route = route;\n    this.products = [];\n    this.currentCategoryId = 1;\n    this.searchMode = false;\n  }\n  ngOnInit() {\n    this.route.paramMap.subscribe(() => {\n      this.listProducts();\n    });\n  }\n  listProducts() {\n    this.searchMode = this.route.snapshot.paramMap.has('keyword');\n    if (this.searchMode) {\n      this.handleSearchProducts();\n    } else {\n      this.handleListProducts();\n    }\n  }\n  handleListProducts() {\n    // check if \"id\" param is available\n    const hasCategoryId = this.route.snapshot.paramMap.has('id');\n    if (hasCategoryId) {\n      this.currentCategoryId = +this.route.snapshot.paramMap.get('id'); // assert that this is non-null\n    } else {\n      this.currentCategoryId = 0;\n    }\n    this.productService.getProductList(this.currentCategoryId).subscribe(data => {\n      this.products = data;\n    });\n  }\n  handleSearchProducts() {\n    const theKeyword = this.route.snapshot.paramMap.get('keyword');\n    this.productService.searchProducts(theKeyword).subscribe(data => {\n      this.products = data;\n    });\n  }\n};\nProductListComponent = __decorate([Component({\n  selector: 'app-product-list',\n  templateUrl: './product-list.component.html',\n  styleUrls: ['./product-list.component.css']\n})], ProductListComponent);","map":{"version":3,"names":["Component","ProductListComponent","constructor","productService","route","products","currentCategoryId","searchMode","ngOnInit","paramMap","subscribe","listProducts","snapshot","has","handleSearchProducts","handleListProducts","hasCategoryId","get","getProductList","data","theKeyword","searchProducts","__decorate","selector","templateUrl","styleUrls"],"sources":["/Users/linhdo/Documents/Fleur-Fantasia/Fleur-Fantasia/03-frontend/angular-ecommerce/src/app/components/product-list/product-list.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Product } from 'src/app/common/product';\nimport { ProductService } from 'src/app/services/product.service';\n\n@Component({\n  selector: 'app-product-list',\n  templateUrl: './product-list.component.html',\n  styleUrls: ['./product-list.component.css']\n})\nexport class ProductListComponent implements OnInit{\n    products: Product[] = [];\n    currentCategoryId: number = 1;\n    searchMode: boolean = false;\n\n    constructor(private productService: ProductService, \n                private route: ActivatedRoute){ }\n\n    ngOnInit(): void {\n        this.route.paramMap.subscribe(() => {\n            this.listProducts()\n        })\n    }\n\n    listProducts() {\n        this.searchMode = this.route.snapshot.paramMap.has('keyword');\n\n        if (this.searchMode){\n            this.handleSearchProducts();\n        } \n        else {\n            this.handleListProducts();\n        }\n    }\n\n    handleListProducts(){\n        // check if \"id\" param is available\n        const hasCategoryId: boolean = this.route.snapshot.paramMap.has('id');\n\n        if (hasCategoryId){\n            this.currentCategoryId = +this.route.snapshot.paramMap.get('id')!; // assert that this is non-null\n        } else {\n            this.currentCategoryId = 0;\n        }\n\n        this.productService.getProductList(this.currentCategoryId).subscribe(\n            data => {\n                this.products = data;\n            }\n        )\n    }\n\n    handleSearchProducts(){\n        const theKeyword: string = this.route.snapshot.paramMap.get('keyword')!;\n        this.productService.searchProducts(theKeyword).subscribe(\n            data => {\n                this.products = data\n            }\n        )\n    }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAU1C,WAAMC,oBAAoB,GAA1B,MAAMA,oBAAoB;EAK7BC,YAAoBC,cAA8B,EAC9BC,KAAqB;IADrB,KAAAD,cAAc,GAAdA,cAAc;IACd,KAAAC,KAAK,GAALA,KAAK;IALzB,KAAAC,QAAQ,GAAc,EAAE;IACxB,KAAAC,iBAAiB,GAAW,CAAC;IAC7B,KAAAC,UAAU,GAAY,KAAK;EAGiB;EAE5CC,QAAQA,CAAA;IACJ,IAAI,CAACJ,KAAK,CAACK,QAAQ,CAACC,SAAS,CAAC,MAAK;MAC/B,IAAI,CAACC,YAAY,EAAE;IACvB,CAAC,CAAC;EACN;EAEAA,YAAYA,CAAA;IACR,IAAI,CAACJ,UAAU,GAAG,IAAI,CAACH,KAAK,CAACQ,QAAQ,CAACH,QAAQ,CAACI,GAAG,CAAC,SAAS,CAAC;IAE7D,IAAI,IAAI,CAACN,UAAU,EAAC;MAChB,IAAI,CAACO,oBAAoB,EAAE;KAC9B,MACI;MACD,IAAI,CAACC,kBAAkB,EAAE;;EAEjC;EAEAA,kBAAkBA,CAAA;IACd;IACA,MAAMC,aAAa,GAAY,IAAI,CAACZ,KAAK,CAACQ,QAAQ,CAACH,QAAQ,CAACI,GAAG,CAAC,IAAI,CAAC;IAErE,IAAIG,aAAa,EAAC;MACd,IAAI,CAACV,iBAAiB,GAAG,CAAC,IAAI,CAACF,KAAK,CAACQ,QAAQ,CAACH,QAAQ,CAACQ,GAAG,CAAC,IAAI,CAAE,CAAC,CAAC;KACtE,MAAM;MACH,IAAI,CAACX,iBAAiB,GAAG,CAAC;;IAG9B,IAAI,CAACH,cAAc,CAACe,cAAc,CAAC,IAAI,CAACZ,iBAAiB,CAAC,CAACI,SAAS,CAChES,IAAI,IAAG;MACH,IAAI,CAACd,QAAQ,GAAGc,IAAI;IACxB,CAAC,CACJ;EACL;EAEAL,oBAAoBA,CAAA;IAChB,MAAMM,UAAU,GAAW,IAAI,CAAChB,KAAK,CAACQ,QAAQ,CAACH,QAAQ,CAACQ,GAAG,CAAC,SAAS,CAAE;IACvE,IAAI,CAACd,cAAc,CAACkB,cAAc,CAACD,UAAU,CAAC,CAACV,SAAS,CACpDS,IAAI,IAAG;MACH,IAAI,CAACd,QAAQ,GAAGc,IAAI;IACxB,CAAC,CACJ;EACL;CACH;AAlDYlB,oBAAoB,GAAAqB,UAAA,EALhCtB,SAAS,CAAC;EACTuB,QAAQ,EAAE,kBAAkB;EAC5BC,WAAW,EAAE,+BAA+B;EAC5CC,SAAS,EAAE,CAAC,8BAA8B;CAC3C,CAAC,C,EACWxB,oBAAoB,CAkDhC"},"metadata":{},"sourceType":"module","externalDependencies":[]}