{"ast":null,"code":"import { map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ProductService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    // Attributes\n    this.baseUrl = 'http://localhost:8080/api/products';\n  }\n  // Map the JSON data from REST API to Product array\n  getProductList(theCategoryId) {\n    const searchUrl = `${this.baseUrl}`;\n    return this.httpClient.get(this.baseUrl).pipe(map(response => response._embedded.products));\n  }\n  static #_ = this.ɵfac = function ProductService_Factory(t) {\n    return new (t || ProductService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ProductService,\n    factory: ProductService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["map","ProductService","constructor","httpClient","baseUrl","getProductList","theCategoryId","searchUrl","get","pipe","response","_embedded","products","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["/Users/linhdo/Documents/Fleur-Fantasia/Fleur-Fantasia/03-frontend/angular-ecommerce/src/app/services/product.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'\nimport { Observable, map } from 'rxjs';\nimport { Product } from '../common/product';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n    // Attributes\n    private baseUrl = 'http://localhost:8080/api/products';\n\n    constructor(private httpClient: HttpClient) { }\n\n    // Map the JSON data from REST API to Product array\n    getProductList(theCategoryId: number): Observable<Product[]>{\n\n        const searchUrl = `${this.baseUrl}`\n\n        return this.httpClient.get<GetResponse>(this.baseUrl).pipe(\n            map(response => response._embedded.products)\n        )\n    }\n}\n\n// Unwrap the JSON from Spring Data REST _embedded entry\ninterface GetResponse{\n    _embedded: {\n        products: Product[];\n    }\n}\n"],"mappings":"AAEA,SAAqBA,GAAG,QAAQ,MAAM;;;AAMtC,OAAM,MAAOC,cAAc;EAIvBC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IAH9B;IACQ,KAAAC,OAAO,GAAG,oCAAoC;EAER;EAE9C;EACAC,cAAcA,CAACC,aAAqB;IAEhC,MAAMC,SAAS,GAAG,GAAG,IAAI,CAACH,OAAO,EAAE;IAEnC,OAAO,IAAI,CAACD,UAAU,CAACK,GAAG,CAAc,IAAI,CAACJ,OAAO,CAAC,CAACK,IAAI,CACtDT,GAAG,CAACU,QAAQ,IAAIA,QAAQ,CAACC,SAAS,CAACC,QAAQ,CAAC,CAC/C;EACL;EAAC,QAAAC,CAAA,G;qBAdQZ,cAAc,EAAAa,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAdjB,cAAc;IAAAkB,OAAA,EAAdlB,cAAc,CAAAmB,IAAA;IAAAC,UAAA,EAFb;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}